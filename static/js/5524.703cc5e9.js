"use strict";(self.webpackChunkICDC_Frontend=self.webpackChunkICDC_Frontend||[]).push([[5524],{80762:(e,t,s)=>{s.r(t),s.d(t,{default:()=>u});var r=s(29008),n=s(2340),a=s(11375),i=s(34105),o=s(83454),c=s(20459);class l extends n.BaseFeatureDataAdapter{constructor(e,t,s){super(e,t,s);const n=this.getConf("bedGzLocation"),i=this.getConf(["index","indexType"]),c=this.getConf(["index","location"]),l=this.getConf("autoSql"),u=this.pluginManager;this.bed=new o.TabixIndexedFile({filehandle:(0,a.openLocation)(n,u),csiFilehandle:"CSI"===i?(0,a.openLocation)(c,u):void 0,tbiFilehandle:"CSI"!==i?(0,a.openLocation)(c,u):void 0,chunkCacheSize:52428800}),this.columnNames=this.getConf("columnNames"),this.scoreColumn=this.getConf("scoreColumn"),this.parser=new r.default({autoSql:l})}async getRefNames(e={}){return this.bed.getReferenceSequenceNames(e)}async getHeader(){return this.bed.getHeader()}async getNames(){if(this.columnNames.length)return this.columnNames;const e=(await this.bed.getHeader()).split(/\n|\r\n|\r/).filter((e=>!!e)).at(-1);return(null==e?void 0:e.includes("\t"))?e.slice(1).split("\t").map((e=>e.trim())):void 0}getFeatures(e,t={}){return(0,i.ObservableCreate)((async s=>{const r=await this.bed.getMetadata(),{columnNumbers:n}=r,a=n.ref-1,i=n.start-1,o=n.end-1,l=await this.getNames();await this.bed.getLines(e.refName,e.start,e.end,{lineCallback:(e,t)=>{s.next((0,c.dE)(e,a,i,o,this.scoreColumn,this.parser,`${this.id}-${t}`,l))},signal:t.signal}),s.complete()}),t.signal)}freeResources(){}}l.capabilities=["getFeatures","getRefNames"];const u=l},20459:(e,t,s)=>{s.d(t,{BX:()=>n,dE:()=>i,xD:()=>o,zZ:()=>a});var r=s(7562);function n(e){var t;const{subfeatures:s,thickStart:r,thickEnd:n,blockCount:a,blockSizes:i,chromStarts:o,refName:c,strand:l=0,...u}=e;if(!r||!n||!l)return e;const d=[];return null===(t=s.filter((e=>"block"===e.type)).sort(((e,t)=>e.start-t.start)))||void 0===t||t.forEach((e=>{const t=e.start,s=e.end;if(r>=s){const e=l>0?"five":"three";d.push({type:`${e}_prime_UTR`,start:t,end:s,refName:c})}else if(r>t&&r<s&&n>=s){const e=l>0?"five":"three";d.push({type:`${e}_prime_UTR`,start:t,end:r,refName:c},{type:"CDS",start:r,end:s,refName:c})}else if(r<=t&&n>=s)d.push({type:"CDS",start:t,end:s,refName:c});else if(r>t&&r<s&&n<s){const e=l>0?"five":"three",a=l>0?"three":"five";d.push({type:`${e}_prime_UTR`,start:t,end:r,refName:c},{type:"CDS",start:r,end:n,refName:c},{type:`${a}_prime_UTR`,start:n,end:s,refName:c})}else if(r<=t&&n>t&&n<s){const e=l>0?"three":"five";d.push({type:"CDS",start:t,end:n,refName:c},{type:`${e}_prime_UTR`,start:n,end:s,refName:c})}else if(n<=t){const e=l>0?"three":"five";d.push({type:`${e}_prime_UTR`,start:t,end:s,refName:c})}})),{...u,strand:l,type:"mRNA",refName:c,subfeatures:d}}function a({start:e,uniqueId:t,refName:s,chromStarts:r,blockCount:n,blockSizes:a,blockStarts:i}){const o=[],c=r||i||[];for(let r=0;r<n;r++){const n=(c[r]||0)+e,i=n+((null==a?void 0:a[r])||0);o.push({uniqueId:`${t}-${r}`,start:n,end:i,refName:s,type:"block"})}return o}function i(e,t,s,i,c,l,u,d){const h=e.split("\t"),m=h[t],f=+h[s],p=s===i?1:0,b=+h[i]+p,k=d?function(e,t){const{blockStarts:s,blockCount:r,chromStarts:n,thickEnd:a,thickStart:i,blockSizes:o,...c}=Object.fromEntries(t.split("\t").map(((t,s)=>[e[s],t])));return{...c,blockStarts:null==s?void 0:s.split(",").map((e=>+e)),chromStarts:null==n?void 0:n.split(",").map((e=>+e)),blockSizes:null==o?void 0:o.split(",").map((e=>+e)),thickStart:+i,thickEnd:+a,blockCount:+r}}(d,e):l.parseLine(e,{uniqueId:u}),{blockCount:S,blockSizes:C,blockStarts:N,chromStarts:g,thickStart:y,thickEnd:v,type:_,score:R,chrom:z,chromStart:E,chromEnd:I,...$}=k,w=S?a({start:f,uniqueId:u,refName:m,chromStarts:g,blockCount:S,blockSizes:C,blockStarts:N}):[],F={...$,type:_,score:c?+k[c]:R,start:f,end:b,refName:m,uniqueId:u,subfeatures:w};return new r.SimpleFeature({id:u,data:o(k)?n({thickStart:y,thickEnd:v,blockCount:S,blockSizes:C,chromStarts:g,...F}):F})}function o(e){return e.thickStart&&e.blockCount&&0!==e.strand}}}]);