"use strict";(self.webpackChunkICDC_Frontend=self.webpackChunkICDC_Frontend||[]).push([[7425],{47425:(e,t,n)=>{n.r(t),n.d(t,{default:()=>I});var a=n(96540),r=n(34339),i=n(44015),o=n(1779),l=n.n(o),s=n(26515),c=n(7562);async function m(e,t){const n=(0,c.getSession)(t),{view:a}=t;try{if(!a)throw new Error("No view associated with this view anymore");await a.navToLocString(e)}catch(e){console.error(e),n.notify(`${e}`)}}const d={AM:"The smallest template-independent mapping quality in the template",AS:"Alignment score generated by aligner",BC:"Barcode sequence identifying the sample",BQ:"Offset to base alignment quality (BAQ)",BZ:"Phred quality of the unique molecular barcode bases in the {OX} tag",CB:"Cell identifier",CC:"Reference name of the next hit",CM:"Edit distance between the color sequence and the color reference (see also {NM})",CO:"Free-text comments",CP:"Leftmost coordinate of the next hit",CQ:"Color read base qualities",CR:"Cellular barcode sequence bases (uncorrected)",CS:"Color read sequence",CT:"Complete read annotation tag, used for consensus annotation dummy features",CY:"Phred quality of the cellular barcode sequence in the {CR} tag",E2:"The 2nd most likely base calls",FI:"The index of segment in the template",FS:"Segment suffix",FZ:"Flow signal intensities",GC:"Reserved for backwards compatibility reasons",GQ:"Reserved for backwards compatibility reasons",GS:"Reserved for backwards compatibility reasons",H0:"Number of perfect hits",H1:"Number of 1-difference hits (see also {NM})",H2:"Number of 2-difference hits",HI:"Query hit index",IH:"Query hit total count",LB:"Library",MC:"CIGAR string for mate/next segment",MD:"String encoding mismatched and deleted reference bases",MF:"Reserved for backwards compatibility reasons",MI:"Molecular identifier; a string that uniquely identifies the molecule from which the record was derived",ML:"Base modification probabilities",MM:"Base modifications / methylation ",MQ:"Mapping quality of the mate/next segment",NH:"Number of reported alignments that contain the query in the current record",NM:"Edit distance to the reference",OA:"Original alignment",OC:"Original CIGAR (deprecated; use {OA} instead)",OP:"Original mapping position (deprecated; use {OA} instead)",OQ:"Original base quality",OX:"Original unique molecular barcode bases",PG:"Program",PQ:"Phred likelihood of the template",PT:"Read annotations for parts of the padded read sequence",PU:"Platform unit",Q2:"Phred quality of the mate/next segment sequence in the {R2} tag",QT:"Phred quality of the sample barcode sequence in the {BC} tag",QX:"Quality score of the unique molecular identifier in the {RX} tag",R2:"Sequence of the mate/next segment in the template",RG:"Read group",RT:"Reserved for backwards compatibility reasons",RX:"Sequence bases of the (possibly corrected) unique molecular identifier",S2:"Reserved for backwards compatibility reasons",SA:"Other canonical alignments in a chimeric alignment",SM:"Template-independent mapping quality",SQ:"Reserved for backwards compatibility reasons",TC:"The number of segments in the template",TS:"Transcript strand",U2:"Phred probability of the 2nd call being wrong conditional on the best being wrong",UQ:"Phred likelihood of the segment, conditional on the mapping being correct"};var u=n(33551),f=n(90656),p=n(88476);function g({tag:e,model:t}){return a.createElement("div",null,a.createElement(u.A,null,"List of supplementary alignment locations"),a.createElement("ul",null,e.split(";").filter((e=>!!e)).map(((e,n)=>{const[r,i,o,l]=e.split(","),s=(0,p.PC)(l),c=Math.floor(s/5),d=+i,u=+i+s,g=d-c,h=u+c,y=`${r}:${Math.max(1,g)}-${h}`,b=`${r}:${d.toLocaleString("en-US")}-${u.toLocaleString("en-US")} (${o}) [${s}bp]`;return a.createElement("li",{key:`${y}-${n}`},a.createElement(f.A,{onClick:async e=>{e.preventDefault(),m(y,t)}},b))}))))}var h=n(56655),y=n(44877),b=n(20212),C=n(30880);const v=(0,a.lazy)((()=>n.e(213).then(n.bind(n,40213)))),w=(0,y.makeStyles)()({cursor:{cursor:"pointer"}});function E({model:e,feature:t,viewType:n}){const{classes:r}=w(),i=(0,c.getSession)(e),{view:o}=e,[l,s]=(0,a.useState)(),[m,d]=(0,a.useState)();(0,a.useEffect)((()=>{(async()=>{try{const e=await async function({view:e,feature:t}){const{assemblyManager:n}=(0,c.getSession)(e),a=t.get("CIGAR"),r=t.get("strand"),i=(0,C.bH)(t,"SA")||"",o=t.get("name"),l=(0,p.NI)(a,1),s=await n.waitForAssembly(e.assemblyNames[0]);if(!s)throw new Error("assembly not found");const m=(0,p.Cu)(i,t.id(),r,o,!0),d=t.toJSON();d.clipPos=l,d.strand=1,d.mate={refName:o,start:l,end:l+(0,p.Gl)(a)};const u=[d,...m];return u.forEach(((e,t)=>{e.refName=(null==s?void 0:s.getCanonicalRefName(e.refName))||e.refName,e.syntenyId=t,e.mate.syntenyId=t,e.mate.uniqueId=`${e.uniqueId}_mate`})),u.sort(((e,t)=>e.clipPos-t.clipPos)),u}({view:o,feature:new c.SimpleFeature(t)});s(e)}catch(e){d(e),console.error(e)}})()}),[t,o]);const g=[];if(l)for(let e=0;e<l.length-1;e++)g.push([l[e],l[e+1]]);return g.length?a.createElement("div",null,a.createElement(u.A,null,"Launch split views with breakend source and target"),m?a.createElement(b.ErrorMessage,{error:m}):null,a.createElement("ul",null,g.map(((t,o)=>{const[l,s]=t;return a.createElement("li",{key:`${JSON.stringify(t)}-${o}`},a.createElement(h.A,{title:"Top panel->Bottom panel"},a.createElement(f.A,{href:"#",className:r.cursor,onClick:t=>{t.preventDefault(),i.queueDialog((t=>[v,{handleClose:t,f1:l,f2:s,model:e,viewType:n}]))}},l.refName,":",(0,c.toLocale)(1===l.strand?l.end:l.start)," ","-> ",s.refName,":",(0,c.toLocale)(1===s.strand?s.start:s.end))))})))):null}function S(e){const{model:t,tag:n,feature:r}=e,i=(0,c.getSession)(t),{pluginManager:o}=(0,c.getEnv)(i);let l;try{l=o.getViewType("BreakpointSplitView")}catch(e){}return a.createElement(s.BaseCard,{...e,title:"Supplementary alignments"},a.createElement(g,{model:t,tag:n}),l?a.createElement(E,{viewType:l,model:t,feature:r}):null)}var q=n(22079),k=n(1775),A=n(71238),R=n(29322),N=n.n(R);const M=(0,y.makeStyles)()({compact:{paddingRight:0,paddingTop:0,paddingBottom:0}}),P=["read paired","read mapped in proper pair","read unmapped","mate unmapped","read reverse strand","mate reverse strand","first in pair","second in pair","not primary alignment","read fails platform/vendor quality checks","read is PCR or optical duplicate","supplementary alignment"];function T(e){const{classes:t}=M(),{feature:n}=e,{flags:r}=n;return a.createElement(s.BaseCard,{...e,title:"Flags"},a.createElement(N(),{name:"Flag",value:r}),a.createElement(q.A,null,P.map(((e,n)=>{const i=r&1<<n,o=`${e}_${i}`;return a.createElement(k.A,{key:o,control:a.createElement(A.A,{className:t.compact,checked:Boolean(i),name:e,readOnly:!0}),label:e})}))))}function O({locString:e,model:t}){return a.createElement(f.A,{onClick:n=>{n.preventDefault(),m(e,t)},href:"#"},e)}var $=n(17965),B=n.n($);function Q({value:e}){const[t,n]=(0,a.useState)(!1),[r,i]=(0,a.useState)(!1),o=String(e);return o.length>100?a.createElement(a.Fragment,null,a.createElement("button",{type:"button",onClick:()=>{B()(o),i(!0),setTimeout((()=>i(!1)),700)}},r?"Copied to clipboard":"Copy"),a.createElement("button",{type:"button",onClick:()=>n((e=>!e))},t?"Show less":"Show more"),a.createElement("div",null,t?o:`${o.slice(0,100)}...`)):a.createElement("div",null,o)}const F=["clipPos","flags"],I=(0,i.observer)((function(e){const{model:t}=e,n=l()(t.featureData),i=function(e,t){var n;return(null===(n=t.tags)||void 0===n?void 0:n.SA)||t.SA}(0,n);return a.createElement(r.A,{"data-testid":"alignment-side-drawer"},a.createElement(s.FeatureDetails,{...e,omit:F,descriptions:{...d,tags:d},feature:n,formatter:(e,n)=>"next_segment_position"===n?a.createElement(O,{model:t,locString:e}):a.createElement(Q,{value:e})}),i?a.createElement(S,{model:t,tag:i,feature:n}):null,void 0!==n.flags?a.createElement(T,{feature:n,...e}):null)}))}}]);